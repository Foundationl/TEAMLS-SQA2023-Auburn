apiVersion: v1
kind: List
items:
# rolebindings
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRoleBinding
   metadata:
     name: system:cloud-node-controller
   roleRef:
     apiGroup: rbac.authorization.k8s.io
     kind: ClusterRole
     name: system:cloud-node-controller
   subjects:
   - kind: ServiceAccount
     name: cloud-node-controller
     namespace: kube-system
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRoleBinding
   metadata:
     name: system:pvl-controller
   roleRef:
     apiGroup: rbac.authorization.k8s.io
     kind: ClusterRole
     name: system:pvl-controller
   subjects:
   - kind: ServiceAccount
     name: pvl-controller
     namespace: kube-system
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRoleBinding
   metadata:
     name: system:cloud-controller-manager
   roleRef:
     apiGroup: rbac.authorization.k8s.io
     kind: ClusterRole
     name: system:cloud-controller-manager
   subjects:
   - kind: ServiceAccount
     name: cloud-controller-manager
     namespace: kube-system
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRoleBinding
   metadata:
     name: system:service-controller
   roleRef:
     apiGroup: rbac.authorization.k8s.io
     kind: ClusterRole
     name: system:service-controller
   subjects:
   - kind: ServiceAccount
     name: service-controller
     namespace: kube-system
# roles
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRole
   metadata:
     name: system:cloud-controller-manager
   rules:
   - apiGroups:
     - ""
     resources:
     - events
     verbs:
     - create
     - patch
     - update
   - apiGroups:
     - ""
     resources:
     - nodes
     verbs:
     - '*'
   - apiGroups:
     - ""
     resources:
     - nodes/status
     verbs:
     - patch
   - apiGroups:
     - ""
     resources:
     - services/status
     verbs:
     - patch
   - apiGroups:
     - ""
     resources:
     - services
     verbs:
     - list
     - patch
     - update
     - watch
   - apiGroups:
     - ""
     resources:
     - serviceaccounts
     verbs:
     - create
     - get
   - apiGroups:
     - ""
     resources:
     - persistentvolumes
     verbs:
     - '*'
   - apiGroups:
     - ""
     resources:
     - endpoints
     verbs:
     - create
     - get
     - list
     - watch
     - update
   - apiGroups:
     - ""
     resources:
     - configmaps
     verbs:
     - get
     - list
     - watch
   - apiGroups:
     - ""
     resources:
     - secrets
     verbs:
     - list
     - get
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRole
   metadata:
     name: system:cloud-node-controller
   rules:
   - apiGroups:
     - ""
     resources:
     - nodes
     verbs:
     - delete
     - get
     - patch
     - update
     - list
   - apiGroups:
     - ""
     resources:
     - nodes/status
     verbs:
     - patch
   - apiGroups:
     - ""
     resources:
     - events
     verbs:
     - create
     - patch
     - update
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRole
   metadata:
     name: system:pvl-controller
   rules:
   - apiGroups:
     - ""
     resources:
     - persistentvolumes
     verbs:
     - '*'
   - apiGroups:
     - ""
     resources:
     - events
     verbs:
     - create
     - patch
     - update
 - apiVersion: rbac.authorization.k8s.io/v1
   kind: ClusterRole
   metadata:
     name: system:service-controller
   rules:
   - apiGroups:
     - ""
     resources:
     - services
     verbs:
     - delete
     - get
     - patch
     - update
     - list
   - apiGroups:
     - ""
     resources:
     - services/status
     verbs:
     - patch
   - apiGroups:
     - ""
     resources:
     - events
     verbs:
     - create
     - patch
     - update
# serviceaccount
 - apiVersion: v1
   kind: ServiceAccount
   metadata:
     name: cloud-controller-manager
     namespace: kube-system
# daemonset
 - apiVersion: apps/v1
   kind: DaemonSet
   metadata:
     name: openstack-cloud-controller-manager
     namespace: kube-system
     labels:
       k8s-app: openstack-cloud-controller-manager
   spec:
     selector:
       matchLabels:
         k8s-app: openstack-cloud-controller-manager
     updateStrategy:
       type: RollingUpdate
     template:
       metadata:
         labels:
           k8s-app: openstack-cloud-controller-manager
       spec:
         nodeSelector:
           node-role.kubernetes.io/master: ""
         securityContext:
           runAsUser: 1001
         tolerations:
         - key: node.cloudprovider.kubernetes.io/uninitialized
           value: "true"
           effect: NoSchedule
         - key: node-role.kubernetes.io/master
           effect: NoSchedule
         serviceAccountName: cloud-controller-manager
         containers:
           - name: openstack-cloud-controller-manager
             image: docker.io/k8scloudprovider/openstack-cloud-controller-manager:v1.14.0
             #command: ["/bin/sh", "-ec", "sleep 1000"]
             args:
               - /bin/openstack-cloud-controller-manager
               - --v=4
               - --cloud-config=$(CLOUD_CONFIG)
               - --cloud-provider=openstack
               - --external-cloud-volume-plugin
               - --use-service-account-credentials=true
               - --address=127.0.0.1
             volumeMounts:
               - mountPath: /etc/kubernetes/pki
                 name: k8s-certs
                 readOnly: true
               - mountPath: /etc/ssl/certs
                 name: ca-certs
                 readOnly: true
               - mountPath: /etc/config
                 name: cloud-config-volume
                 readOnly: true
               - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
                 name: flexvolume-dir
             resources:
               requests:
                 cpu: 200m
             env:
               - name: CLOUD_CONFIG
                 value: /etc/config/cloud-config
         hostNetwork: true
         volumes:
         - hostPath:
             path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
             type: DirectoryOrCreate
           name: flexvolume-dir
         - hostPath:
             path: /etc/kubernetes/pki
             type: DirectoryOrCreate
           name: k8s-certs
         - hostPath:
             path: /etc/ssl/certs
             type: DirectoryOrCreate
           name: ca-certs
         - name: cloud-config-volume
           secret:
             secretName: cloud-config
